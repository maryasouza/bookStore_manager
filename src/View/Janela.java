package View;

import DAO.AuthorDao;
import DAO.Interfaces.IAuthorDao;
import DAO.Interfaces.IPublisherDao;
import DAO.PublisherDao;
import model.Author;
import model.Book;
import model.Publisher;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

public class Janela extends JFrame implements View{


    private DefaultTableModel tbModelAuthors;
    private DefaultTableModel tbModelPublishers;
    private DefaultTableModel tbModelBooks;
    private final IAuthorDao authorDao;
    private final IPublisherDao publisherDao;
    
    public Janela(IAuthorDao authorDao, IPublisherDao publisherDao){
        this.authorDao = authorDao;
        this.publisherDao = publisherDao;
        initComponents();
    }

    public Janela() throws Exception {
        this.authorDao = new AuthorDao();
        this.publisherDao = new PublisherDao();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new JPanel();
        jTabbedPane1 = new JTabbedPane();
        jTabbedPane3 = new JTabbedPane();
        jPanel2 = new JPanel();
        jScrollPane2 = new JScrollPane();
        jtable_Autor = new JTable();
        txt_SobrenomeAutorBusca = new JTextField();
        jLabel3 = new JLabel();
        jLabel4 = new JLabel();
        txt_NomeAutorBusca = new JTextField();
        btn_BuscarAutores = new JButton();
        btn_EditarAutor = new JButton();
        btn_ExcluirAutor = new JButton();
        jPanel3 = new JPanel();
        txt_SobrenomeNovoAutor = new JTextField();
        jLabel5 = new JLabel();
        jLabel6 = new JLabel();
        txt_NomeNovoAutor = new JTextField();
        btn_AddNovoAutor = new JButton();
        jTabbedPane4 = new JTabbedPane();
        jPanel5 = new JPanel();
        table_Editoras = new JScrollPane();
        jtable_Editoras = new JTable();
        btn_EditarEditora = new JButton();
        btn_BuscarEditora = new JButton();
        btn_ExcluirEditora = new JButton();
        jLabel13 = new JLabel();
        txt_NomeBuscaEditora = new JTextField();
        jPanel6 = new JPanel();
        txt_NomeEditora = new JTextField();
        jLabel14 = new JLabel();
        txt_SiteEditora = new JTextField();
        jLabel15 = new JLabel();
        btn_AddEditora = new JButton();
        jTabbedPane2 = new JTabbedPane();
        jPanel8 = new JPanel();
        table_Livros = new JScrollPane();
        jtable_Livros = new JTable();
        txt_tituloLivroBuscar = new JTextField();
        jLabel10 = new JLabel();
        btn_buscarLivro = new JButton();
        btn_editarLivro = new JButton();
        btn_excluirLivro = new JButton();
        jPanel9 = new JPanel();
        jLabel7 = new JLabel();
        txt_isbn = new JTextField();
        txt_titulo = new JTextField();
        jLabel8 = new JLabel();
        jScrollPane1 = new JScrollPane();
        txtArea_AutoresDoLivro = new JTextArea();
        cbo_autoresExistentes = new JComboBox<>();
        jLabel9 = new JLabel();
        btn_addListaAutoresLivros = new JButton();
        cbo_EditorasExistentes = new JComboBox<>();
        jLabel11 = new JLabel();
        txt_Preco = new JTextField();
        jLabel12 = new JLabel();
        btn_removeListaAutoresLivros = new JButton();
        btn_AddNovoLivro = new JButton();

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);

        jtable_Autor.setModel(new DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nome", "Sobrenome"
            }
        ));
        jScrollPane2.setViewportView(jtable_Autor);

        txt_SobrenomeAutorBusca.setFont(new Font("Segoe UI", 0, 18)); // NOI18N

        jLabel3.setFont(new Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("Sobrenome:");

        jLabel4.setFont(new Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setText("Nome:");

        txt_NomeAutorBusca.setFont(new Font("Segoe UI", 0, 18)); // NOI18N

        btn_BuscarAutores.setFont(new Font("Segoe UI", 0, 18)); // NOI18N
        btn_BuscarAutores.setText("Buscar");

        btn_EditarAutor.setFont(new Font("Segoe UI", 0, 18)); // NOI18N
        btn_EditarAutor.setText("Editar");

        btn_ExcluirAutor.setFont(new Font("Segoe UI", 0, 18)); // NOI18N
        btn_ExcluirAutor.setText("Excluir");

        GroupLayout jPanel2Layout = new GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, GroupLayout.DEFAULT_SIZE, 803, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_SobrenomeAutorBusca, GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                            .addComponent(txt_NomeAutorBusca))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(btn_EditarAutor, GroupLayout.Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, 126, GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_ExcluirAutor, GroupLayout.Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, 126, GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_BuscarAutores, GroupLayout.PREFERRED_SIZE, 126, GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txt_SobrenomeAutorBusca, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21))
                    .addGroup(GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(btn_BuscarAutores, GroupLayout.PREFERRED_SIZE, 100, GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED))
                        .addGroup(GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_NomeAutorBusca, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))
                                .addComponent(btn_ExcluirAutor))
                            .addGap(34, 34, 34)
                            .addComponent(btn_EditarAutor)
                            .addGap(8, 8, 8))))
                .addComponent(jScrollPane2, GroupLayout.PREFERRED_SIZE, 387, GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane3.addTab("Listar Autores", jPanel2);

        txt_SobrenomeNovoAutor.setFont(new Font("Segoe UI", 0, 18)); // NOI18N

        jLabel5.setFont(new Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setText("Sobrenome:");

        jLabel6.setFont(new Font("Segoe UI", 0, 18)); // NOI18N
        jLabel6.setText("Nome:");

        txt_NomeNovoAutor.setFont(new Font("Segoe UI", 0, 18)); // NOI18N

        btn_AddNovoAutor.setFont(new Font("Segoe UI", 0, 18)); // NOI18N
        btn_AddNovoAutor.setText("Adicionar");

        GroupLayout jPanel3Layout = new GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(239, 239, 239)
                .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                    .addComponent(txt_NomeNovoAutor, GroupLayout.PREFERRED_SIZE, 300, GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGap(29, 29, 29)
                            .addComponent(txt_SobrenomeNovoAutor, GroupLayout.PREFERRED_SIZE, 300, GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel6)
                        .addComponent(jLabel5))
                    .addComponent(btn_AddNovoAutor, GroupLayout.PREFERRED_SIZE, 126, GroupLayout.PREFERRED_SIZE))
                .addContainerGap(255, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel6)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_NomeNovoAutor, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_SobrenomeNovoAutor, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_AddNovoAutor)
                .addContainerGap(296, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Adicionar", jPanel3);

        jTabbedPane1.addTab("Autores", jTabbedPane3);

        jtable_Editoras.setModel(new DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nome", "URL"
            }
        ));
        table_Editoras.setViewportView(jtable_Editoras);

        btn_EditarEditora.setFont(new Font("Segoe UI", 0, 18)); // NOI18N
        btn_EditarEditora.setText("Editar");

        btn_BuscarEditora.setFont(new Font("Segoe UI", 0, 18)); // NOI18N
        btn_BuscarEditora.setText("Buscar");

        btn_ExcluirEditora.setFont(new Font("Segoe UI", 0, 18)); // NOI18N
        btn_ExcluirEditora.setText("Excluir");

        jLabel13.setFont(new Font("Segoe UI", 0, 18)); // NOI18N
        jLabel13.setText("Nome:");

        txt_NomeBuscaEditora.setFont(new Font("Segoe UI", 0, 18)); // NOI18N
        txt_NomeBuscaEditora.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                txt_NomeBuscaEditoraActionPerformed(evt);
            }
        });

        GroupLayout jPanel5Layout = new GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(table_Editoras, GroupLayout.DEFAULT_SIZE, 811, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                            .addComponent(btn_EditarEditora, GroupLayout.PREFERRED_SIZE, 126, GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txt_NomeBuscaEditora)
                                .addGap(50, 50, 50)
                                .addComponent(btn_ExcluirEditora, GroupLayout.PREFERRED_SIZE, 126, GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_BuscarEditora, GroupLayout.PREFERRED_SIZE, 126, GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                    .addGroup(GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel13)
                                .addComponent(txt_NomeBuscaEditora, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                            .addComponent(btn_ExcluirEditora))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_EditarEditora)
                        .addGap(8, 8, 8))
                    .addGroup(GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(btn_BuscarEditora, GroupLayout.PREFERRED_SIZE, 100, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(table_Editoras, GroupLayout.PREFERRED_SIZE, 387, GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane4.addTab("Listar Editoras", jPanel5);

        txt_NomeEditora.setFont(new Font("Segoe UI", 0, 18)); // NOI18N

        jLabel14.setFont(new Font("Segoe UI", 0, 18)); // NOI18N
        jLabel14.setText("Nome:");

        txt_SiteEditora.setFont(new Font("Segoe UI", 0, 18)); // NOI18N

        jLabel15.setFont(new Font("Segoe UI", 0, 18)); // NOI18N
        jLabel15.setText("Site da Editora:");

        btn_AddEditora.setFont(new Font("Segoe UI", 0, 18)); // NOI18N
        btn_AddEditora.setText("Adicionar Editora");
        btn_AddEditora.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btn_AddEditoraActionPerformed(evt);
            }
        });

        GroupLayout jPanel6Layout = new GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addGroup(jPanel6Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(txt_NomeEditora)
                        .addGap(184, 184, 184))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel14))
                            .addComponent(jLabel15)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(61, 61, 61)
                                .addComponent(txt_SiteEditora, GroupLayout.PREFERRED_SIZE, 411, GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btn_AddEditora)))
                        .addGap(0, 1, Short.MAX_VALUE)))
                .addGap(77, 77, 77))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel14)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_NomeEditora, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_SiteEditora, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_AddEditora))
                .addContainerGap(348, Short.MAX_VALUE))
        );

        jTabbedPane4.addTab("Adicionar", jPanel6);

        jTabbedPane1.addTab("Editoras", jTabbedPane4);

        jtable_Livros.setModel(new DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ISBN", "Titulo", "Preço R$"
            }
        ));
        table_Livros.setViewportView(jtable_Livros);

        txt_tituloLivroBuscar.setFont(new Font("Segoe UI", 0, 18)); // NOI18N

        jLabel10.setFont(new Font("Segoe UI", 0, 18)); // NOI18N
        jLabel10.setText("Título do Livro:");

        btn_buscarLivro.setFont(new Font("Segoe UI", 0, 18)); // NOI18N
        btn_buscarLivro.setText("Buscar");

        btn_editarLivro.setFont(new Font("Segoe UI", 0, 18)); // NOI18N
        btn_editarLivro.setText("Editar");

        btn_excluirLivro.setFont(new Font("Segoe UI", 0, 18)); // NOI18N
        btn_excluirLivro.setText("Excluir");
        btn_excluirLivro.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btn_excluirLivroActionPerformed(evt);
            }
        });

        GroupLayout jPanel8Layout = new GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(table_Livros, GroupLayout.DEFAULT_SIZE, 803, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btn_editarLivro, GroupLayout.PREFERRED_SIZE, 126, GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_tituloLivroBuscar, GroupLayout.PREFERRED_SIZE, 360, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                                .addComponent(btn_excluirLivro, GroupLayout.PREFERRED_SIZE, 126, GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_buscarLivro, GroupLayout.PREFERRED_SIZE, 126, GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14))))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                    .addGroup(GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_tituloLivroBuscar, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(btn_excluirLivro))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_editarLivro)
                        .addGap(8, 8, 8))
                    .addGroup(GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addComponent(btn_buscarLivro, GroupLayout.PREFERRED_SIZE, 100, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(table_Livros, GroupLayout.PREFERRED_SIZE, 387, GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Listar Livros", jPanel8);

        jLabel7.setFont(new Font("Segoe UI", 0, 18)); // NOI18N
        jLabel7.setText("ISBN:");

        txt_isbn.setFont(new Font("Segoe UI", 0, 18)); // NOI18N
        txt_isbn.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                txt_isbnActionPerformed(evt);
            }
        });

        txt_titulo.setFont(new Font("Segoe UI", 0, 18)); // NOI18N

        jLabel8.setFont(new Font("Segoe UI", 0, 18)); // NOI18N
        jLabel8.setText("Título:");

        txtArea_AutoresDoLivro.setEditable(false);
        txtArea_AutoresDoLivro.setColumns(20);
        txtArea_AutoresDoLivro.setFont(new Font("Segoe UI", 0, 18)); // NOI18N
        txtArea_AutoresDoLivro.setRows(5);
        jScrollPane1.setViewportView(txtArea_AutoresDoLivro);

        cbo_autoresExistentes.setFont(new Font("Segoe UI", 0, 18)); // NOI18N

        jLabel9.setFont(new Font("Segoe UI", 0, 18)); // NOI18N
        jLabel9.setText("Autores do livro:");

        btn_addListaAutoresLivros.setFont(new Font("Segoe UI", 0, 14)); // NOI18N
        btn_addListaAutoresLivros.setText("Adicionar");

        cbo_EditorasExistentes.setFont(new Font("Segoe UI", 0, 18)); // NOI18N

        jLabel11.setFont(new Font("Segoe UI", 0, 18)); // NOI18N
        jLabel11.setText("Preço R$:");

        txt_Preco.setFont(new Font("Segoe UI", 0, 18)); // NOI18N

        jLabel12.setFont(new Font("Segoe UI", 0, 18)); // NOI18N
        jLabel12.setText("Editora:");

        btn_removeListaAutoresLivros.setFont(new Font("Segoe UI", 0, 14)); // NOI18N
        btn_removeListaAutoresLivros.setText("Remover");

        btn_AddNovoLivro.setFont(new Font("Segoe UI", 0, 18)); // NOI18N
        btn_AddNovoLivro.setText("Adicionar Novo Livro");
        btn_AddNovoLivro.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btn_AddNovoLivroActionPerformed(evt);
            }
        });

        GroupLayout jPanel9Layout = new GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel8)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_titulo, GroupLayout.PREFERRED_SIZE, 300, GroupLayout.PREFERRED_SIZE))
                    .addGroup(GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                        .addGap(0, 105, Short.MAX_VALUE)
                        .addGroup(jPanel9Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(cbo_EditorasExistentes, GroupLayout.Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, 360, GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, GroupLayout.Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, 334, GroupLayout.PREFERRED_SIZE)
                            .addGroup(GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbo_autoresExistentes, GroupLayout.PREFERRED_SIZE, 210, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_addListaAutoresLivros, GroupLayout.PREFERRED_SIZE, 92, GroupLayout.PREFERRED_SIZE))
                            .addGroup(GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txt_isbn, GroupLayout.PREFERRED_SIZE, 300, GroupLayout.PREFERRED_SIZE))
                            .addGroup(GroupLayout.Alignment.TRAILING, jPanel9Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel12)
                                .addGroup(jPanel9Layout.createSequentialGroup()
                                    .addComponent(jLabel11)
                                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txt_Preco, GroupLayout.PREFERRED_SIZE, 327, GroupLayout.PREFERRED_SIZE))))))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(btn_removeListaAutoresLivros, GroupLayout.PREFERRED_SIZE, 92, GroupLayout.PREFERRED_SIZE)
                        .addGap(174, 174, 174))
                    .addGroup(GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                        .addComponent(btn_AddNovoLivro)
                        .addGap(16, 16, 16))))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(jPanel9Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_titulo, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(43, 43, 43)
                .addGroup(jPanel9Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_isbn, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(49, 49, 49)
                .addGroup(jPanel9Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(cbo_autoresExistentes, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(btn_addListaAutoresLivros, GroupLayout.PREFERRED_SIZE, 31, GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_removeListaAutoresLivros, GroupLayout.PREFERRED_SIZE, 31, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 139, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel12)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbo_EditorasExistentes, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_Preco, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(btn_AddNovoLivro, GroupLayout.PREFERRED_SIZE, 31, GroupLayout.PREFERRED_SIZE))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Adicionar", jPanel9);

        jTabbedPane1.addTab("Livros", jTabbedPane2);

        GroupLayout jPanel1Layout = new GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_AddEditoraActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btn_AddEditoraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_AddEditoraActionPerformed

    private void txt_NomeBuscaEditoraActionPerformed(ActionEvent evt) {//GEN-FIRST:event_txt_NomeBuscaEditoraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_NomeBuscaEditoraActionPerformed

    private void btn_AddNovoLivroActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btn_AddNovoLivroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_AddNovoLivroActionPerformed

    private void btn_excluirLivroActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btn_excluirLivroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_excluirLivroActionPerformed

    private void txt_isbnActionPerformed(ActionEvent evt) {//GEN-FIRST:event_txt_isbnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_isbnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Janela.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(Janela.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(Janela.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(Janela.class.getName()).log(Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Janela().setVisible(true);
                } catch (Exception e) {
                    throw new RuntimeException(e);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JButton btn_AddEditora;
    private JButton btn_AddNovoAutor;
    private JButton btn_AddNovoLivro;
    private JButton btn_BuscarAutores;
    private JButton btn_BuscarEditora;
    private JButton btn_EditarAutor;
    private JButton btn_EditarEditora;
    private JButton btn_ExcluirAutor;
    private JButton btn_ExcluirEditora;
    private JButton btn_addListaAutoresLivros;
    private JButton btn_buscarLivro;
    private JButton btn_editarLivro;
    private JButton btn_excluirLivro;
    private JButton btn_removeListaAutoresLivros;
    public JComboBox<Object> cbo_EditorasExistentes;
    public JComboBox<Object> cbo_autoresExistentes;
    private JLabel jLabel10;
    private JLabel jLabel11;
    private JLabel jLabel12;
    private JLabel jLabel13;
    private JLabel jLabel14;
    private JLabel jLabel15;
    private JLabel jLabel3;
    private JLabel jLabel4;
    private JLabel jLabel5;
    private JLabel jLabel6;
    private JLabel jLabel7;
    private JLabel jLabel8;
    private JLabel jLabel9;
    private JPanel jPanel1;
    private JPanel jPanel2;
    private JPanel jPanel3;
    private JPanel jPanel5;
    private JPanel jPanel6;
    private JPanel jPanel8;
    private JPanel jPanel9;
    private JScrollPane jScrollPane1;
    private JScrollPane jScrollPane2;
    private JTabbedPane jTabbedPane1;
    private JTabbedPane jTabbedPane2;
    private JTabbedPane jTabbedPane3;
    private JTabbedPane jTabbedPane4;
    private JTable jtable_Autor;
    private JTable jtable_Editoras;
    private JTable jtable_Livros;
    private JScrollPane table_Editoras;
    private JScrollPane table_Livros;
    private JTextArea txtArea_AutoresDoLivro;
    private JTextField txt_NomeAutorBusca;
    private JTextField txt_NomeBuscaEditora;
    private JTextField txt_NomeEditora;
    private JTextField txt_NomeNovoAutor;
    private JTextField txt_Preco;
    private JTextField txt_SiteEditora;
    private JTextField txt_SobrenomeAutorBusca;
    private JTextField txt_SobrenomeNovoAutor;
    private JTextField txt_isbn;
    private JTextField txt_titulo;
    private JTextField txt_tituloLivroBuscar;
    // End of variables declaration//GEN-END:variables

        private void refreshTableBooks(List<Book> books) {
        tbModelBooks.setRowCount(0);
        this.fillOutBooksComponents(books);
    }

    private void refreshTablePublisher(List<Publisher> publishers) {
        cbo_EditorasExistentes.removeAllItems();
        tbModelPublishers.setRowCount(0);

        this.fillOutPublisherComponents(publishers);
    }

    private void refreshTableAuthors(List<Author> authors) {
        cbo_autoresExistentes.removeAllItems();
        tbModelAuthors.setRowCount(0);

        this.fillOutAuthorsComponents(authors);
    }

    private void fillOutAuthorsComponents(List<Author> authors){
        tbModelAuthors = (DefaultTableModel) jtable_Autor.getModel();

        for(Author a : authors){
            String tbDataAuthors[] = {String.valueOf(a.getId()), a.getFirstName(), a.getLastName()};
            tbModelAuthors.addRow(tbDataAuthors);

            cbo_autoresExistentes.addItem(a);
        }
    }

    private void fillOutPublisherComponents(List<Publisher> publishers){
        tbModelPublishers = (DefaultTableModel) jtable_Editoras.getModel();

        for(Publisher p : publishers){
            String tbDataPublishers[] = {String.valueOf(p.getPublisher_id()), p.getName(), p.getUrl()};
            tbModelPublishers.addRow(tbDataPublishers);

            cbo_EditorasExistentes.addItem(p);
        }
    }

    private void fillOutBooksComponents(List<Book> books){
        tbModelBooks = (DefaultTableModel) jtable_Livros.getModel();

        for(Book b : books){
            String tbDataBooks[] = {b.getIsbn(), b.getTitle(), String.valueOf(b.getPrice())};
            tbModelBooks.addRow(tbDataBooks);
        }
    }

    @Override
    public void initVisualComponents(List<Book> books, List<Publisher> publishers, List<Author> authors) {
        this.fillOutAuthorsComponents(authors);

        this.fillOutPublisherComponents(publishers);

        this.fillOutBooksComponents(books);
    }

    @Override
    public void refreshVisualComponents(List<Book> books, List<Publisher> publishers, List<Author> authors) {
        if(books != null && !books.isEmpty())
            this.refreshTableBooks(books);

        if(publishers != null && !publishers.isEmpty())
            this.refreshTablePublisher(publishers);

        if(authors != null && !authors.isEmpty())
            this.refreshTableAuthors(authors);
    }

    @Override
    public void addExistentAuthorsToListActionListner(ActionListener al) {
        btn_addListaAutoresLivros.addActionListener(al);
    }

    @Override
    public Author getEditAuthors() {
        if(jtable_Autor.getSelectionModel().isSelectionEmpty())
            return null;

        int Id = Integer.valueOf(jtable_Autor.getValueAt(jtable_Autor.getSelectedRow(), 0).toString());
        String actualFirstName = jtable_Autor.getValueAt(jtable_Autor.getSelectedRow(), 1).toString();
        String actualLastName = jtable_Autor.getValueAt(jtable_Autor.getSelectedRow(), 2).toString();

        String completeActualName = actualFirstName + " " + actualLastName;

        String refreshedFirstName = JOptionPane.showInputDialog("Deseja atualizar o nome do autor "+completeActualName+" ?");
        String refreshedLastName = JOptionPane.showInputDialog("Deseja atualizar o sobrenome do autor "+completeActualName+" ?");

        if(refreshedFirstName == null || refreshedFirstName.equals("") || refreshedFirstName.trim().equals(""))
            refreshedFirstName = actualFirstName;

        if(refreshedLastName == null || refreshedLastName.equals("") || refreshedLastName.trim().equals(""))
            refreshedLastName = actualLastName;

        return new Author(Id, refreshedLastName, refreshedFirstName);
    }

    @Override
    public int getDeleteAuthor() {
        if(jtable_Autor.getSelectionModel().isSelectionEmpty())
            return 0;
        
        int excludeBooksAndAuthors = JOptionPane.showConfirmDialog(null,"Deseja apagar o autor?");
        
        if(excludeBooksAndAuthors == 1)
            return 0 ;
        
        return Integer.parseInt(jtable_Autor.getValueAt(jtable_Autor.getSelectedRow(), 0).toString());
    }

    @Override
    public void addActionListnerAuthor(ActionListener al) {
        btn_AddNovoAutor.addActionListener(al);
    }

    @Override
    public void editActionListnerAuthor(ActionListener al) {
        btn_EditarAutor.addActionListener(al);
    }

    @Override
    public void excludeActionListnerAuthor(ActionListener al) {
        btn_ExcluirAutor.addActionListener(al);
    }

    @Override
    public String getDeleteBook() {
        if(jtable_Livros.getSelectionModel().isSelectionEmpty())
            return "";
        String excluderBook = String.valueOf(JOptionPane.showConfirmDialog(null,"Deseja apagar o livro?"));

        if(excluderBook.equals("0"))
            return String.valueOf(jtable_Livros.getValueAt(jtable_Livros.getSelectedRow(), 0).toString());

        return String.valueOf(jtable_Livros.getValueAt(jtable_Livros.getSelectedRow(), 0).toString());
    }

    @Override
    public int getDeletePublishers() {
        if(jtable_Editoras.getSelectionModel().isSelectionEmpty())
            return 0;

        int excludeAllBooks = JOptionPane.showConfirmDialog(null,"Deseja apagar a editora?");

        System.out.println(excludeAllBooks);

        if(excludeAllBooks >= 1)
            return 0 ;

        return Integer.parseInt(jtable_Editoras.getValueAt(jtable_Editoras.getSelectedRow(), 0).toString());
    }

    @Override
    public void addActionListnerBook(ActionListener al) {
        btn_AddNovoLivro.addActionListener(al);
    }

    @Override
    public void editActionListnerBook(ActionListener al) {
        btn_editarLivro.addActionListener(al);
    }

    @Override
    public void excludeActionListnerBook(ActionListener al) {
        btn_excluirLivro.addActionListener(al);
    }

    @Override
    public Publisher getEditPublishers() {
        if(jtable_Editoras.getSelectionModel().isSelectionEmpty())
            return null;

        int Id = Integer.valueOf(jtable_Editoras.getValueAt(jtable_Editoras.getSelectedRow(), 0).toString());
        String actualName = jtable_Editoras.getValueAt(jtable_Editoras.getSelectedRow(), 1).toString();

        String publisherNameRefreshed = JOptionPane.showInputDialog("Deseja atualizar o nome da editora "+actualName+" ?");
        String publisherUrlRefreshed = JOptionPane.showInputDialog("Deseja atualizar a URL da editora "+actualName+" ?");

        if(publisherNameRefreshed == null || publisherNameRefreshed.equals("") || publisherNameRefreshed.trim().equals(""))
            publisherNameRefreshed = actualName;

        if(publisherUrlRefreshed == null || publisherUrlRefreshed.equals("") || publisherUrlRefreshed.trim().equals(""))
            publisherUrlRefreshed = jtable_Editoras.getValueAt(jtable_Editoras.getSelectedRow(), 2).toString();
        
        return new Publisher(Id, publisherNameRefreshed, publisherUrlRefreshed);
    }

    @Override
    public Book getEditBooks() {
        if(jtable_Livros.getSelectionModel().isSelectionEmpty())
            return null;

        String isbn = jtable_Livros.getValueAt(jtable_Livros.getSelectedRow(), 0).toString();
        String title = jtable_Livros.getValueAt(jtable_Livros.getSelectedRow(), 1).toString();
        double price = Double.parseDouble(jtable_Livros.getValueAt(jtable_Livros.getSelectedRow(), 2).toString());

        String refreshedTitle = JOptionPane.showInputDialog("Deseja atualizar o título do livro "+title+" ?");
        double refreshedPrice = Double.parseDouble(JOptionPane.showInputDialog("É nessario alterar o preço do livro "+price+" !"));

        if(refreshedTitle == null || refreshedTitle.equals("") || refreshedTitle.trim().equals(""))
            refreshedTitle = title;

        if(refreshedPrice <= 0)
            refreshedPrice = price;


        return new Book(refreshedTitle, isbn, refreshedPrice);
    }

    @Override
    public void addActionListnerPublisher(ActionListener al) {
        btn_AddEditora.addActionListener(al);
    }

    @Override
    public void editActionListnerPublisher(ActionListener al) {
        btn_EditarEditora.addActionListener(al);
    }

    @Override
    public void excludeActionListnerPublisher(ActionListener al) {
        btn_ExcluirEditora.addActionListener(al);
    }

    @Override
    public Publisher getAddPublisher() {
        String publisherName = txt_NomeEditora.getText();
        String url = txt_SiteEditora.getText();
        int id = 1;

        return new Publisher(id, publisherName, url);
    }

    @Override
    public Author getAddAuthor() {
        String fName = txt_NomeNovoAutor.getText();
        String name = txt_SobrenomeNovoAutor.getText();
            try {
                if(name.equals("") || fName.equals("")){
                    throw new Exception("Por favor, preencha todos os campos!");
                }
                return new Author(fName, name);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e.getMessage());
                return null;
            }
    }

    @Override
    public Author getAuthorSelected() {
        return (Author) cbo_autoresExistentes.getSelectedItem();
    }

    @Override
    public Author getSearchAuthors() {

        String name = txt_NomeAutorBusca.getText();
        String lName = txt_SobrenomeAutorBusca.getText();
        if(name.equals("") && lName.equals("")){
            JOptionPane.showMessageDialog(null, "Por favor, preencha ao menos um dos campos!");
            return null;
        }
        return new Author(name, lName);
    }

    @Override
    public Book getAddBook() {
        String title = "";
        String isbn = "";
        double price = 0.0;
        int authorId = 0;
        int publisherId = 0;

        try {
            if (txt_titulo.getText().isEmpty() || txt_isbn.getText().isEmpty() || txt_Preco.getText().isEmpty()) {
                throw new Exception("Por favor, preencha todos os campos!");
            } else {
                title = txt_titulo.getText().trim();
                isbn = txt_isbn.getText().trim();
                price = Double.parseDouble(txt_Preco.getText().trim());
                authorId = authorDao.getByNameReturnId(cbo_autoresExistentes.getSelectedItem().toString());
                publisherId = publisherDao.getByPublishNameReturnId(cbo_EditorasExistentes.getSelectedItem().toString());

                if (price < 0) {
                    throw new Exception("Valor inválido! (o valor não pode ser negativo)");
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
            return null;
        }
        return new Book(authorId, title, isbn, price, publisherId);

    }

    @Override
    public String getSearchBooks() {
            String title = txt_tituloLivroBuscar.getText();
            if(title.equals("")){
                JOptionPane.showMessageDialog(null, "Por favor, preencha ao menos um dos campos!");
                return null;
            }
        return title;
    }

    @Override
    public String getListPublishers() {
        return txt_NomeEditora.getText();
    }

    @Override
    public Publisher getPublisherSelected() {
        Publisher p = (Publisher) cbo_EditorasExistentes.getSelectedItem();
        System.out.println(p.getPublisher_id());
        return p;
    }

    @Override
    public void removeExistentAuthorsToListActionListner(ActionListener al) {
        btn_removeListaAutoresLivros.addActionListener(al);
    }

    @Override
    public void atualizaTextoListaAutores(List<Author> authors) {
        String refreshedText = "";
        if(!authors.isEmpty()){
            for(Author a : authors){
               refreshedText += a + "; ";
            }
            txtArea_AutoresDoLivro.setText(refreshedText);
            refreshedText = "";
        }
        else{
            txtArea_AutoresDoLivro.setText("");
        }
    }

    @Override
    public void searchActionListnerPublisher(ActionListener al) {
       btn_BuscarEditora.addActionListener(al);
    }

    @Override
    public String getSearchPublishers() {
        return txt_NomeBuscaEditora.getText();
    }

    @Override
    public void searchActionListnerAutor(ActionListener al) {
        btn_BuscarAutores.addActionListener(al);
    }

    @Override
    public void searchActionListnerBook(ActionListener al) {
       btn_buscarLivro.addActionListener(al);
    }
}